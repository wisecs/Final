
Final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800200  000003f8  0000048c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006b  0080021a  0080021a  000004a6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000518  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013bc  00000000  00000000  00000590  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000df0  00000000  00000000  0000194c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000737  00000000  00000000  0000273c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000188  00000000  00000000  00002e74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000709  00000000  00000000  00002ffc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006f3  00000000  00000000  00003705  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003df8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	18 c1       	rjmp	.+560    	; 0x296 <__vector_25>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 ef       	ldi	r30, 0xF8	; 248
  fc:	f3 e0       	ldi	r31, 0x03	; 3
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	aa 31       	cpi	r26, 0x1A	; 26
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	aa e1       	ldi	r26, 0x1A	; 26
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a5 38       	cpi	r26, 0x85	; 133
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	36 d0       	rcall	.+108    	; 0x18c <main>
 120:	69 c1       	rjmp	.+722    	; 0x3f4 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <serial_setup>:
char serial_read(void) {
	while(!(UCSR0A & (1 << RXC0))) {
		//wait until Receive Complete
	}
	return UDR0;
}
 124:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 128:	e1 ec       	ldi	r30, 0xC1	; 193
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	10 82       	st	Z, r1
 12e:	a2 ec       	ldi	r26, 0xC2	; 194
 130:	b0 e0       	ldi	r27, 0x00	; 0
 132:	1c 92       	st	X, r1
 134:	80 81       	ld	r24, Z
 136:	80 61       	ori	r24, 0x10	; 16
 138:	80 83       	st	Z, r24
 13a:	80 81       	ld	r24, Z
 13c:	88 60       	ori	r24, 0x08	; 8
 13e:	80 83       	st	Z, r24
 140:	80 81       	ld	r24, Z
 142:	80 68       	ori	r24, 0x80	; 128
 144:	80 83       	st	Z, r24
 146:	8c 91       	ld	r24, X
 148:	82 60       	ori	r24, 0x02	; 2
 14a:	8c 93       	st	X, r24
 14c:	8c 91       	ld	r24, X
 14e:	84 60       	ori	r24, 0x04	; 4
 150:	8c 93       	st	X, r24
 152:	87 e6       	ldi	r24, 0x67	; 103
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 15a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 15e:	08 95       	ret

00000160 <serial_write>:
 160:	e0 ec       	ldi	r30, 0xC0	; 192
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	90 81       	ld	r25, Z
 166:	95 ff       	sbrs	r25, 5
 168:	fd cf       	rjmp	.-6      	; 0x164 <serial_write+0x4>
 16a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 16e:	08 95       	ret

00000170 <serial_write_word>:
 170:	cf 93       	push	r28
 172:	df 93       	push	r29
 174:	ec 01       	movw	r28, r24
 176:	88 81       	ld	r24, Y
 178:	88 23       	and	r24, r24
 17a:	29 f0       	breq	.+10     	; 0x186 <serial_write_word+0x16>
 17c:	21 96       	adiw	r28, 0x01	; 1
 17e:	f0 df       	rcall	.-32     	; 0x160 <serial_write>
 180:	89 91       	ld	r24, Y+
 182:	81 11       	cpse	r24, r1
 184:	fc cf       	rjmp	.-8      	; 0x17e <serial_write_word+0xe>
 186:	df 91       	pop	r29
 188:	cf 91       	pop	r28
 18a:	08 95       	ret

0000018c <main>:
 18c:	cf 93       	push	r28
 18e:	df 93       	push	r29
 190:	00 d0       	rcall	.+0      	; 0x192 <main+0x6>
 192:	1f 92       	push	r1
 194:	cd b7       	in	r28, 0x3d	; 61
 196:	de b7       	in	r29, 0x3e	; 62
 198:	2f ef       	ldi	r18, 0xFF	; 255
 19a:	83 ed       	ldi	r24, 0xD3	; 211
 19c:	90 e3       	ldi	r25, 0x30	; 48
 19e:	21 50       	subi	r18, 0x01	; 1
 1a0:	80 40       	sbci	r24, 0x00	; 0
 1a2:	90 40       	sbci	r25, 0x00	; 0
 1a4:	e1 f7       	brne	.-8      	; 0x19e <main+0x12>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <main+0x1c>
 1a8:	00 00       	nop
 1aa:	bc df       	rcall	.-136    	; 0x124 <serial_setup>
 1ac:	78 94       	sei
 1ae:	0f 2e       	mov	r0, r31
 1b0:	fd e0       	ldi	r31, 0x0D	; 13
 1b2:	cf 2e       	mov	r12, r31
 1b4:	d1 2c       	mov	r13, r1
 1b6:	f0 2d       	mov	r31, r0
 1b8:	81 2c       	mov	r8, r1
 1ba:	91 2c       	mov	r9, r1
 1bc:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <RX_FLAG>
 1c0:	22 23       	and	r18, r18
 1c2:	e1 f3       	breq	.-8      	; 0x1bc <main+0x30>
 1c4:	f8 94       	cli
 1c6:	61 e2       	ldi	r22, 0x21	; 33
 1c8:	72 e0       	ldi	r23, 0x02	; 2
 1ca:	8b 2d       	mov	r24, r11
 1cc:	9a 2d       	mov	r25, r10
 1ce:	d6 d0       	rcall	.+428    	; 0x37c <strcpy>
 1d0:	8b 2d       	mov	r24, r11
 1d2:	9a 2d       	mov	r25, r10
 1d4:	cd df       	rcall	.-102    	; 0x170 <serial_write_word>
 1d6:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <RX_FLAG>
 1da:	dc 82       	std	Y+4, r13	; 0x04
 1dc:	cb 82       	std	Y+3, r12	; 0x03
 1de:	be 01       	movw	r22, r28
 1e0:	6d 5f       	subi	r22, 0xFD	; 253
 1e2:	7f 4f       	sbci	r23, 0xFF	; 255
 1e4:	8b 2d       	mov	r24, r11
 1e6:	9a 2d       	mov	r25, r10
 1e8:	b2 d0       	rcall	.+356    	; 0x34e <strtok>
 1ea:	b8 2e       	mov	r11, r24
 1ec:	a9 2e       	mov	r10, r25
 1ee:	20 91 1f 02 	lds	r18, 0x021F	; 0x80021f <rx_len>
 1f2:	30 91 20 02 	lds	r19, 0x0220	; 0x800220 <rx_len+0x1>
 1f6:	12 16       	cp	r1, r18
 1f8:	13 06       	cpc	r1, r19
 1fa:	a4 f4       	brge	.+40     	; 0x224 <main+0x98>
 1fc:	e8 2e       	mov	r14, r24
 1fe:	f9 2e       	mov	r15, r25
 200:	08 2d       	mov	r16, r8
 202:	19 2d       	mov	r17, r9
 204:	f7 01       	movw	r30, r14
 206:	80 81       	ld	r24, Z
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	99 d0       	rcall	.+306    	; 0x33e <tolower>
 20c:	f7 01       	movw	r30, r14
 20e:	81 93       	st	Z+, r24
 210:	7f 01       	movw	r14, r30
 212:	0f 5f       	subi	r16, 0xFF	; 255
 214:	1f 4f       	sbci	r17, 0xFF	; 255
 216:	20 91 1f 02 	lds	r18, 0x021F	; 0x80021f <rx_len>
 21a:	30 91 20 02 	lds	r19, 0x0220	; 0x800220 <rx_len+0x1>
 21e:	02 17       	cp	r16, r18
 220:	13 07       	cpc	r17, r19
 222:	84 f3       	brlt	.-32     	; 0x204 <main+0x78>
 224:	43 e0       	ldi	r20, 0x03	; 3
 226:	50 e0       	ldi	r21, 0x00	; 0
 228:	66 e0       	ldi	r22, 0x06	; 6
 22a:	72 e0       	ldi	r23, 0x02	; 2
 22c:	8b 2d       	mov	r24, r11
 22e:	9a 2d       	mov	r25, r10
 230:	ac d0       	rcall	.+344    	; 0x38a <strncmp>
 232:	89 2b       	or	r24, r25
 234:	71 f5       	brne	.+92     	; 0x292 <main+0x106>
 236:	66 e0       	ldi	r22, 0x06	; 6
 238:	72 e0       	ldi	r23, 0x02	; 2
 23a:	8b 2d       	mov	r24, r11
 23c:	9a 2d       	mov	r25, r10
 23e:	95 d0       	rcall	.+298    	; 0x36a <strcmp>
 240:	89 2b       	or	r24, r25
 242:	39 f1       	breq	.+78     	; 0x292 <main+0x106>
 244:	6a e0       	ldi	r22, 0x0A	; 10
 246:	72 e0       	ldi	r23, 0x02	; 2
 248:	8b 2d       	mov	r24, r11
 24a:	9a 2d       	mov	r25, r10
 24c:	8e d0       	rcall	.+284    	; 0x36a <strcmp>
 24e:	89 2b       	or	r24, r25
 250:	01 f1       	breq	.+64     	; 0x292 <main+0x106>
 252:	61 e1       	ldi	r22, 0x11	; 17
 254:	72 e0       	ldi	r23, 0x02	; 2
 256:	8b 2d       	mov	r24, r11
 258:	9a 2d       	mov	r25, r10
 25a:	87 d0       	rcall	.+270    	; 0x36a <strcmp>
 25c:	89 2b       	or	r24, r25
 25e:	c9 f0       	breq	.+50     	; 0x292 <main+0x106>
 260:	6d e3       	ldi	r22, 0x3D	; 61
 262:	70 e0       	ldi	r23, 0x00	; 0
 264:	8b 2d       	mov	r24, r11
 266:	9a 2d       	mov	r25, r10
 268:	75 d0       	rcall	.+234    	; 0x354 <strchr>
 26a:	89 2b       	or	r24, r25
 26c:	91 f0       	breq	.+36     	; 0x292 <main+0x106>
 26e:	8d e3       	ldi	r24, 0x3D	; 61
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	9a 83       	std	Y+2, r25	; 0x02
 274:	89 83       	std	Y+1, r24	; 0x01
 276:	be 01       	movw	r22, r28
 278:	6f 5f       	subi	r22, 0xFF	; 255
 27a:	7f 4f       	sbci	r23, 0xFF	; 255
 27c:	8b 2d       	mov	r24, r11
 27e:	9a 2d       	mov	r25, r10
 280:	66 d0       	rcall	.+204    	; 0x34e <strtok>
 282:	b8 2e       	mov	r11, r24
 284:	a9 2e       	mov	r10, r25
 286:	be 01       	movw	r22, r28
 288:	6f 5f       	subi	r22, 0xFF	; 255
 28a:	7f 4f       	sbci	r23, 0xFF	; 255
 28c:	88 2d       	mov	r24, r8
 28e:	99 2d       	mov	r25, r9
 290:	5e d0       	rcall	.+188    	; 0x34e <strtok>
 292:	78 94       	sei
 294:	93 cf       	rjmp	.-218    	; 0x1bc <main+0x30>

00000296 <__vector_25>:

ISR(USART0_RX_vect) {
 296:	1f 92       	push	r1
 298:	0f 92       	push	r0
 29a:	0f b6       	in	r0, 0x3f	; 63
 29c:	0f 92       	push	r0
 29e:	11 24       	eor	r1, r1
 2a0:	0b b6       	in	r0, 0x3b	; 59
 2a2:	0f 92       	push	r0
 2a4:	8f 93       	push	r24
 2a6:	9f 93       	push	r25
 2a8:	ef 93       	push	r30
 2aa:	ff 93       	push	r31
	rx_word[rx_i] = UDR0;
 2ac:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <rx_i>
 2b0:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <rx_i+0x1>
 2b4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 2b8:	ef 5d       	subi	r30, 0xDF	; 223
 2ba:	fd 4f       	sbci	r31, 0xFD	; 253
 2bc:	80 83       	st	Z, r24
	//UDR0 = rx_word[rx_i];	//Echo back

	if(rx_word[rx_i] == 0x0A || rx_word[rx_i] == 0x0D || rx_word[rx_i] == '\0') {
 2be:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <rx_i>
 2c2:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <rx_i+0x1>
 2c6:	ef 5d       	subi	r30, 0xDF	; 223
 2c8:	fd 4f       	sbci	r31, 0xFD	; 253
 2ca:	80 81       	ld	r24, Z
 2cc:	8a 30       	cpi	r24, 0x0A	; 10
 2ce:	91 f0       	breq	.+36     	; 0x2f4 <__vector_25+0x5e>
 2d0:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <rx_i>
 2d4:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <rx_i+0x1>
 2d8:	ef 5d       	subi	r30, 0xDF	; 223
 2da:	fd 4f       	sbci	r31, 0xFD	; 253
 2dc:	80 81       	ld	r24, Z
 2de:	8d 30       	cpi	r24, 0x0D	; 13
 2e0:	49 f0       	breq	.+18     	; 0x2f4 <__vector_25+0x5e>
 2e2:	e0 91 1c 02 	lds	r30, 0x021C	; 0x80021c <rx_i>
 2e6:	f0 91 1d 02 	lds	r31, 0x021D	; 0x80021d <rx_i+0x1>
 2ea:	ef 5d       	subi	r30, 0xDF	; 223
 2ec:	fd 4f       	sbci	r31, 0xFD	; 253
 2ee:	80 81       	ld	r24, Z
 2f0:	81 11       	cpse	r24, r1
 2f2:	11 c0       	rjmp	.+34     	; 0x316 <__vector_25+0x80>
		RX_FLAG = true;
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <RX_FLAG>
		rx_len = rx_i-1;
 2fa:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <rx_i>
 2fe:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <rx_i+0x1>
 302:	01 97       	sbiw	r24, 0x01	; 1
 304:	90 93 20 02 	sts	0x0220, r25	; 0x800220 <rx_len+0x1>
 308:	80 93 1f 02 	sts	0x021F, r24	; 0x80021f <rx_len>
		rx_i = 0;
 30c:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <rx_i+0x1>
 310:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <rx_i>
 314:	09 c0       	rjmp	.+18     	; 0x328 <__vector_25+0x92>
	} else 
		rx_i++;
 316:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <rx_i>
 31a:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <rx_i+0x1>
 31e:	01 96       	adiw	r24, 0x01	; 1
 320:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <rx_i+0x1>
 324:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <rx_i>
}
 328:	ff 91       	pop	r31
 32a:	ef 91       	pop	r30
 32c:	9f 91       	pop	r25
 32e:	8f 91       	pop	r24
 330:	0f 90       	pop	r0
 332:	0b be       	out	0x3b, r0	; 59
 334:	0f 90       	pop	r0
 336:	0f be       	out	0x3f, r0	; 63
 338:	0f 90       	pop	r0
 33a:	1f 90       	pop	r1
 33c:	18 95       	reti

0000033e <tolower>:
 33e:	91 11       	cpse	r25, r1
 340:	08 95       	ret
 342:	81 54       	subi	r24, 0x41	; 65
 344:	8a 51       	subi	r24, 0x1A	; 26
 346:	08 f4       	brcc	.+2      	; 0x34a <tolower+0xc>
 348:	80 5e       	subi	r24, 0xE0	; 224
 34a:	85 5a       	subi	r24, 0xA5	; 165
 34c:	08 95       	ret

0000034e <strtok>:
 34e:	4a e1       	ldi	r20, 0x1A	; 26
 350:	52 e0       	ldi	r21, 0x02	; 2
 352:	29 c0       	rjmp	.+82     	; 0x3a6 <strtok_r>

00000354 <strchr>:
 354:	fc 01       	movw	r30, r24
 356:	81 91       	ld	r24, Z+
 358:	86 17       	cp	r24, r22
 35a:	21 f0       	breq	.+8      	; 0x364 <strchr+0x10>
 35c:	88 23       	and	r24, r24
 35e:	d9 f7       	brne	.-10     	; 0x356 <strchr+0x2>
 360:	99 27       	eor	r25, r25
 362:	08 95       	ret
 364:	31 97       	sbiw	r30, 0x01	; 1
 366:	cf 01       	movw	r24, r30
 368:	08 95       	ret

0000036a <strcmp>:
 36a:	fb 01       	movw	r30, r22
 36c:	dc 01       	movw	r26, r24
 36e:	8d 91       	ld	r24, X+
 370:	01 90       	ld	r0, Z+
 372:	80 19       	sub	r24, r0
 374:	01 10       	cpse	r0, r1
 376:	d9 f3       	breq	.-10     	; 0x36e <strcmp+0x4>
 378:	99 0b       	sbc	r25, r25
 37a:	08 95       	ret

0000037c <strcpy>:
 37c:	fb 01       	movw	r30, r22
 37e:	dc 01       	movw	r26, r24
 380:	01 90       	ld	r0, Z+
 382:	0d 92       	st	X+, r0
 384:	00 20       	and	r0, r0
 386:	e1 f7       	brne	.-8      	; 0x380 <strcpy+0x4>
 388:	08 95       	ret

0000038a <strncmp>:
 38a:	fb 01       	movw	r30, r22
 38c:	dc 01       	movw	r26, r24
 38e:	41 50       	subi	r20, 0x01	; 1
 390:	50 40       	sbci	r21, 0x00	; 0
 392:	30 f0       	brcs	.+12     	; 0x3a0 <strncmp+0x16>
 394:	8d 91       	ld	r24, X+
 396:	01 90       	ld	r0, Z+
 398:	80 19       	sub	r24, r0
 39a:	19 f4       	brne	.+6      	; 0x3a2 <strncmp+0x18>
 39c:	00 20       	and	r0, r0
 39e:	b9 f7       	brne	.-18     	; 0x38e <strncmp+0x4>
 3a0:	88 1b       	sub	r24, r24
 3a2:	99 0b       	sbc	r25, r25
 3a4:	08 95       	ret

000003a6 <strtok_r>:
 3a6:	fa 01       	movw	r30, r20
 3a8:	a1 91       	ld	r26, Z+
 3aa:	b0 81       	ld	r27, Z
 3ac:	00 97       	sbiw	r24, 0x00	; 0
 3ae:	19 f4       	brne	.+6      	; 0x3b6 <strtok_r+0x10>
 3b0:	10 97       	sbiw	r26, 0x00	; 0
 3b2:	e1 f0       	breq	.+56     	; 0x3ec <strtok_r+0x46>
 3b4:	cd 01       	movw	r24, r26
 3b6:	dc 01       	movw	r26, r24
 3b8:	cd 01       	movw	r24, r26
 3ba:	0d 90       	ld	r0, X+
 3bc:	00 20       	and	r0, r0
 3be:	11 f4       	brne	.+4      	; 0x3c4 <strtok_r+0x1e>
 3c0:	c0 01       	movw	r24, r0
 3c2:	13 c0       	rjmp	.+38     	; 0x3ea <strtok_r+0x44>
 3c4:	fb 01       	movw	r30, r22
 3c6:	21 91       	ld	r18, Z+
 3c8:	22 23       	and	r18, r18
 3ca:	19 f0       	breq	.+6      	; 0x3d2 <strtok_r+0x2c>
 3cc:	20 15       	cp	r18, r0
 3ce:	d9 f7       	brne	.-10     	; 0x3c6 <strtok_r+0x20>
 3d0:	f3 cf       	rjmp	.-26     	; 0x3b8 <strtok_r+0x12>
 3d2:	fb 01       	movw	r30, r22
 3d4:	21 91       	ld	r18, Z+
 3d6:	20 15       	cp	r18, r0
 3d8:	19 f4       	brne	.+6      	; 0x3e0 <strtok_r+0x3a>
 3da:	1e 92       	st	-X, r1
 3dc:	11 96       	adiw	r26, 0x01	; 1
 3de:	06 c0       	rjmp	.+12     	; 0x3ec <strtok_r+0x46>
 3e0:	22 23       	and	r18, r18
 3e2:	c1 f7       	brne	.-16     	; 0x3d4 <strtok_r+0x2e>
 3e4:	0d 90       	ld	r0, X+
 3e6:	00 20       	and	r0, r0
 3e8:	a1 f7       	brne	.-24     	; 0x3d2 <strtok_r+0x2c>
 3ea:	d0 01       	movw	r26, r0
 3ec:	fa 01       	movw	r30, r20
 3ee:	a1 93       	st	Z+, r26
 3f0:	b0 83       	st	Z, r27
 3f2:	08 95       	ret

000003f4 <_exit>:
 3f4:	f8 94       	cli

000003f6 <__stop_program>:
 3f6:	ff cf       	rjmp	.-2      	; 0x3f6 <__stop_program>
